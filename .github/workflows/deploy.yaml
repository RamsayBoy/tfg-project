name: Continuous Deployment
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the source"
        uses: actions/checkout@v3

      - name: "Setup Node"
        uses: actions/setup-node@v2
        with:
          node-version: "14.15.4"

      # TODO: Run the tests (Node)

      # Disable node build. It will be done in the server
      # - name: "Build Node"
      #   run: |
      #     cd back
      #     npm i
      #     npm run build

      - name: "Build Angular"
        run: |
          cd front
          npm i
          npm run production-build

      # Disable this step. It will be done in the server
      # - name: "Upload Node artifacts"
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: node-api
      #     path: back/dist/

      - name: "Upload Angular artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: angular-front
          path: front/dist/

  deploy:
    name: "Deploy to production"
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.PRODUCTION_SSH_USER }}
          SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
          SSH_HOST: ${{ secrets.PRODUCTION_SSH_HOST }}

      - name: Stop the server
        run: ssh production 'sudo systemctl stop nginx'

      # Disable this step. It will be done in the server
      # - name: Download Node artifacts
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: node-api
      #     path: artifacts/api

      - name: Download Angular artifacts
        uses: actions/download-artifact@v3
        with:
          name: angular-front
          path: artifacts/front

      # Disable this step. It will be done in the server
      # - name: Copy Node files
      #   run: scp -r ./* production:~/express-api/
      #   working-directory: artifacts/api

      - name: Copy Angular files
        run: scp -r ./* production:~/var/www
        working-directory: artifacts/front

      - name: Stop Node API execution
        run: ssh production "export PATH=\$HOME/.nvm/versions/node/v14.15.4/bin/; pm2 delete Express-API"

      - name: Update node source code on server
        if: ${{ always() }}
        run: ssh production "cd/tfg-project && git fetch && git pull"

      - name: Start Node API
        if: ${{ always() }}
        run: |
          ssh production "cd tfg-project/back && export PATH=\$HOME/.nvm/versions/node/v14.15.4/bin/; pm2 start 'npm start' -n Express-API"
          ssh production "export PATH=\$HOME/.nvm/versions/node/v14.15.4/bin/; pm2 save"

      - name: Start the server
        if: ${{ always() }}
        run: ssh production 'sudo systemctl restart nginx'
