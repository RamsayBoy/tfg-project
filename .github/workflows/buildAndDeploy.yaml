name: Continuous Deployment
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  angular_build:
    name: "Angular Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the source"
        uses: actions/checkout@v3

      - name: "Setup Node"
        uses: actions/setup-node@v2
        with:
          node-version: "14.15.4"

      - name: "Build Angular"
        run: |
          cd front
          npm i
          npm run production-build

      - name: "Upload Angular artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: angular-front
          path: front/dist/

  express_build:
    name: "Express Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Check out the source"
        uses: actions/checkout@v3

      - name: "Setup Node"
        uses: actions/setup-node@v2
        with:
          node-version: "14.15.4"

      - name: "Lint"
        run: |
          npm run lint

      - name: "Build Express API"
        if: ${{ success() }}
        run: |
          cd back
          npm i --also=dev
          npm run build

      - name: "Upload Node artifacts"
        uses: actions/upload-artifact@v3
        with:
          name: node-api
          path: back/dist/

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: [angular_build, express_build]
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.PRODUCTION_SSH_USER }}
          SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}
          SSH_HOST: ${{ secrets.PRODUCTION_SSH_HOST }}

      - name: Download Node artifacts
        uses: actions/download-artifact@v3
        with:
          name: node-api
          path: artifacts/api

      - name: Download Angular artifacts
        uses: actions/download-artifact@v3
        with:
          name: angular-front
          path: artifacts/front

      - name: Copy Node files
        run: scp -r ./* production:~/express-api/
        working-directory: artifacts/api

      - name: Copy Angular files
        run: scp -r ./* production:~/var/www
        working-directory: artifacts/front
